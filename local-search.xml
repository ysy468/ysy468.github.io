<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>镜像源及 Host 加速的设置</title>
    <link href="/2024/12/%E9%95%9C%E5%83%8F%E6%BA%90%E5%8F%8Ahost%E5%8A%A0%E9%80%9F%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
    <url>/2024/12/%E9%95%9C%E5%83%8F%E6%BA%90%E5%8F%8Ahost%E5%8A%A0%E9%80%9F%E7%9A%84%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="镜像源及-Host-加速的设置"><a class="header-anchor" href="#镜像源及-Host-加速的设置">¶</a>镜像源及 Host 加速的设置</h2><h3 id="配置-pip-镜像源"><a class="header-anchor" href="#配置-pip-镜像源">¶</a>配置 pip 镜像源</h3><h4 id="编辑-pip-配置文件"><a class="header-anchor" href="#编辑-pip-配置文件">¶</a>编辑 pip 配置文件</h4><p>打开或新建 <code>~/.pip/pip.conf</code> 文件，加入以下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[global]</span><br><span class="hljs-attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple<br><span class="hljs-attr">install.trusted-host</span> = https://pypi.tuna.tsinghua.edu.cn<br></code></pre></td></tr></table></figure><p>你还可以选择其他镜像源，例如阿里云的 PyPI 镜像：</p><ul><li>镜像地址：<code>http://mirrors.aliyun.com/pypi/simple/</code></li><li>配置示例：</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[global]</span><br><span class="hljs-attr">index-url</span> = https://mirrors.aliyun.com/pypi/simple/<br><span class="hljs-attr">install.trusted-host</span> = https://mirrors.aliyun.com<br></code></pre></td></tr></table></figure><h4 id="验证镜像源配置"><a class="header-anchor" href="#验证镜像源配置">¶</a>验证镜像源配置</h4><p>运行以下命令查看当前镜像源地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip3 config list<br></code></pre></td></tr></table></figure><hr><h3 id="配置-Conda-镜像源"><a class="header-anchor" href="#配置-Conda-镜像源">¶</a>配置 Conda 镜像源</h3><h4 id="使用命令行管理通道"><a class="header-anchor" href="#使用命令行管理通道">¶</a>使用命令行管理通道</h4><ol><li><p><strong>添加镜像源通道</strong><br>运行以下命令将镜像源添加为 Conda 的通道：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free<br>conda config --add channels https://mirrors.sustech.edu.cn/anaconda/pkgs/main<br>conda config --add channels https://mirrors.sustech.edu.cn/anaconda/pkgs/free<br></code></pre></td></tr></table></figure></li><li><p><strong>移除镜像源通道</strong><br>如果需要移除某个通道，可以运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free<br></code></pre></td></tr></table></figure></li><li><p><strong>查看当前通道配置</strong><br>运行以下命令查看已配置的通道列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --show channels<br></code></pre></td></tr></table></figure></li></ol><h4 id="手动修改-Conda-配置文件"><a class="header-anchor" href="#手动修改-Conda-配置文件">¶</a>手动修改 Conda 配置文件</h4><p>编辑 <code>~/.condarc</code> 文件，加入以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">channels:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">https://mirrors.sustech.edu.cn/anaconda/pkgs/main</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">https://mirrors.sustech.edu.cn/anaconda/pkgs/free</span><br><span class="hljs-attr">show_channel_urls:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h4 id="更新-Conda-环境"><a class="header-anchor" href="#更新-Conda-环境">¶</a>更新 Conda 环境</h4><p>运行以下命令清理缓存并更新 Conda 环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda clean -i  <span class="hljs-comment"># 清理索引缓存</span><br>conda update -n base conda<br></code></pre></td></tr></table></figure><hr><h3 id="配置-GitHub-Host-加速"><a class="header-anchor" href="#配置-GitHub-Host-加速">¶</a>配置 GitHub Host 加速</h3><p>GitHub 的访问可能会因为网络限制变慢，你可以通过手动更新 Host 文件来加速。</p><h4 id="编辑-Host-文件"><a class="header-anchor" href="#编辑-Host-文件">¶</a>编辑 Host 文件</h4><p>执行以下命令以编辑系统的 Host 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> edit /etc/hosts<br></code></pre></td></tr></table></figure><h4 id="添加-GitHub-加速-IP"><a class="header-anchor" href="#添加-GitHub-加速-IP">¶</a>添加 GitHub 加速 IP</h4><p>在 Host 文件中添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># GitHub IP Hosts Start</span><br><span class="hljs-comment"># 更新时间: 2024-12-09 11:00:01 UTC+08:00</span><br><span class="hljs-comment"># 数据来源: https://github.com/ittuann/GitHub-IP-hosts</span><br><br>140.82.113.25   alive.github.com<br>140.82.113.26   alive.github.com<br>140.82.113.6    api.github.com<br>140.82.114.6    api.github.com<br>185.199.108.153 assets-cdn.github.com<br>185.199.109.153 assets-cdn.github.com<br>185.199.110.153 assets-cdn.github.com<br>185.199.111.153 assets-cdn.github.com<br>140.82.112.4    github.com<br>151.101.1.194   github.global.ssl.fastly.net<br>185.199.108.153 github.io<br>185.199.109.153 github.io<br>185.199.110.153 github.io<br>185.199.111.153 github.io<br><span class="hljs-comment"># 更多 IP 地址请参考项目仓库：https://github.com/ittuann/GitHub-IP-hosts</span><br><br><span class="hljs-comment"># GitHub IP Hosts End</span><br></code></pre></td></tr></table></figure><h4 id="保存并更新-Host"><a class="header-anchor" href="#保存并更新-Host">¶</a>保存并更新 Host</h4><p>保存文件后，执行以下命令使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl restart network<br></code></pre></td></tr></table></figure><hr><h3 id="注意事项"><a class="header-anchor" href="#注意事项">¶</a>注意事项</h3><ol><li><strong>镜像源的选择：</strong> 根据需求选择合适的镜像源，国内用户推荐使用清华大学或阿里云的镜像源。</li><li><strong>Host 配置的更新：</strong> GitHub 的 IP 地址可能会随时间发生变化，建议定期更新 Host 文件内容。可以通过 <a href="https://github.com/ittuann/GitHub-IP-hosts">ittuann 的项目仓库</a> 获取最新的 Host 文件。</li><li><strong>使用工具自动化更新：</strong> 考虑使用脚本或工具自动化更新 Host 文件，避免手动维护的繁琐。</li></ol><hr><p>希望这份文档能够帮助你快速配置镜像源及加速工具，提高网络访问效率！</p>]]></content>
    
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>conda</tag>
      
      <tag>host</tag>
      
      <tag>pip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git的常用命令及hexo部署githubpages</title>
    <link href="/2024/12/git%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8Ahexo%E9%83%A8%E7%BD%B2githubpages/"/>
    <url>/2024/12/git%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8Ahexo%E9%83%A8%E7%BD%B2githubpages/</url>
    
    <content type="html"><![CDATA[<h1>Git 操作示例</h1><p>以 <code>https://github.com/xulong0826/blog-code</code> 为例</p><h2 id="克隆远程仓库"><a class="header-anchor" href="#克隆远程仓库">¶</a>克隆远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/xulong0826/blog-code<br></code></pre></td></tr></table></figure><h2 id="拉取更新"><a class="header-anchor" href="#拉取更新">¶</a>拉取更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull<br></code></pre></td></tr></table></figure><h2 id="查看远程仓库地址"><a class="header-anchor" href="#查看远程仓库地址">¶</a>查看远程仓库地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote -v<br></code></pre></td></tr></table></figure><h2 id="修改远程仓库地址"><a class="header-anchor" href="#修改远程仓库地址">¶</a>修改远程仓库地址</h2><h3 id="删除指定的远程仓库地址："><a class="header-anchor" href="#删除指定的远程仓库地址：">¶</a>删除指定的远程仓库地址：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote set-url --delete (--push) origin https://github.com/xulong0826/blog-code.git<br></code></pre></td></tr></table></figure><h3 id="添加新的远程仓库地址："><a class="header-anchor" href="#添加新的远程仓库地址：">¶</a>添加新的远程仓库地址：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote set-url --add origin https://github.com/xulong0826/blog-code.git<br></code></pre></td></tr></table></figure><h2 id="添加文件到暂存区"><a class="header-anchor" href="#添加文件到暂存区">¶</a>添加文件到暂存区</h2><h3 id="添加所有更改："><a class="header-anchor" href="#添加所有更改：">¶</a>添加所有更改：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br></code></pre></td></tr></table></figure><h3 id="单独添加指定文件："><a class="header-anchor" href="#单独添加指定文件：">¶</a>单独添加指定文件：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add &lt;文件名/文件夹&gt;  <span class="hljs-comment"># 如 xx.md 或 xx.jpg</span><br></code></pre></td></tr></table></figure><h2 id="提交更改"><a class="header-anchor" href="#提交更改">¶</a>提交更改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -m <span class="hljs-string">&quot;update the project&quot;</span><br></code></pre></td></tr></table></figure><h2 id="推送更改到远程分支"><a class="header-anchor" href="#推送更改到远程分支">¶</a>推送更改到远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin main<br></code></pre></td></tr></table></figure><h3 id="注意："><a class="header-anchor" href="#注意：">¶</a>注意：</h3><ul><li>本地分支：<code>origin</code></li><li>远程分支：<code>main</code></li></ul><hr><h1>Hexo 配置</h1><h2 id="安装-Hexo-Git-部署插件"><a class="header-anchor" href="#安装-Hexo-Git-部署插件">¶</a>安装 Hexo Git 部署插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h2 id="配置-config-yml-文件"><a class="header-anchor" href="#配置-config-yml-文件">¶</a>配置 <code>_config.yml</code> 文件</h2><p>在 <code>_config.yml</code> 文件中添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/xulong0826/blog</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><h2 id="部署"><a class="header-anchor" href="#部署">¶</a>部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装项目依赖文件</span><br>npm install <br><span class="hljs-comment"># 清理生成的缓存和旧文件</span><br>npm run clean<br><span class="hljs-comment"># 构建并发布静态博客</span><br>npm run deploy<br>(hexo deploy)<br></code></pre></td></tr></table></figure><p>通过以上操作，你可以顺利完成 Git 和 Hexo 的配置与更新部署。如果还有其他问题，可以随时补充说明！</p>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
